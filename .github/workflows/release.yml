name: Release

on:
  push:
    branches:
      - master
jobs:
  release:
    name: Generate Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASEBOT_TOKEN }}
          GIT_AUTHOR_NAME: "service-github-lyft-semantic-release"
          GIT_AUTHOR_EMAIL: "service-github-lyft-semantic-release@users.noreply.github.com"
          GIT_COMMITTER_NAME: "service-github-lyft-semantic-release"
          GIT_COMMITTER_EMAIL: "service-github-lyft-semantic-release@users.noreply.github.com"
        run: npx semantic-release
  check_for_tag:
    name: Get Release Tag
    needs: release
    runs-on: ubuntu-latest
    outputs:
      currentTag: ${{ steps.setTag.outputs.currentTag }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Use the latest commit on the branch which triggered this workflow,
          # not the commit which triggered the workflow
          ref: ${{ github.ref }}
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Get target git ref
        id: setTag
        # Print any tags associated with the target ref, in reverse lexicographical
        # order so that the first item is the highest version number. If we find
        # a tag, update our target
        run: |
          CURRENT_TAG=$(git tag --sort=-refname --points-at ${{ github.ref }} | head -n 1)
          echo "::set-output name=currentTag::$CURRENT_TAG"
  build_push_github:
    name: Build and push image to Github
    needs: check_for_tag
    runs-on: ubuntu-latest
    if: needs.check_for_tag.outputs.currentTag
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.check_for_tag.outputs.currentTag }}
      - name: Push Docker Image to Github Registry
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: ${{ secrets.package_name }}
          image_tag: latest,${{github.sha}},${{ needs.check_for_tag.outputs.currentTag }}
          push_git_tag: true
          registry: docker.pkg.github.com
  push_dockerhub:
    name: Build and push image to Dockerhub
    needs: check_for_tag
    runs-on: ubuntu-latest
    if: needs.check_for_tag.outputs.currentTag
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.check_for_tag.outputs.currentTag }}
      - name: Push Docker Image to Dockerhub
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"
          image_name: ${{ secrets.DOCKERHUB_IMAGE_NAME }}
          image_tag: latest,${{ github.sha }},${{ needs.check_for_tag.outputs.currentTag }}
          push_git_tag: true
          build_extra_args: "--compress=true"
