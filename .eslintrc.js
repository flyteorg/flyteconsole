/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/

module.exports = {
    root: true,
    env: {
        browser: true,
        es6: true,
        node: true
    },
    parser: '@typescript-eslint/parser',
    plugins: ['@typescript-eslint', 'react-hooks', 'jest'],
    extends: [
        'eslint:recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:react-hooks/recommended',
        'plugin:jest/recommended',
        'prettier',
        'prettier/@typescript-eslint'
    ],
    rules: {
        'no-case-declarations': 'warn',
        'jest/no-mocks-import': 'off',
        'jest/valid-title': 'off',
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/ban-types': 'warn',
        '@typescript-eslint/no-empty-function': 'warn'
    }
};
// module.exports = {
//     "extends": [
//         "plugin:react/recommended",
//         "prettier",
//         "prettier/@typescript-eslint"
//     ],
//     "parser": "@typescript-eslint/parser",
//     "parserOptions": {
//         "project": "tsconfig.json",
//         "sourceType": "module"
//     },
//     "plugins": [
//         "eslint-plugin-import",
//         "eslint-plugin-react",
//         "@typescript-eslint",
//         "@typescript-eslint/tslint"
//     ],
//     "rules": {
//         "@typescript-eslint/indent": "off",
//         "@typescript-eslint/member-delimiter-style": [
//             "off",
//             {
//                 "multiline": {
//                     "delimiter": "none",
//                     "requireLast": true
//                 },
//                 "singleline": {
//                     "delimiter": "semi",
//                     "requireLast": false
//                 }
//             }
//         ],
//         "@typescript-eslint/naming-convention": "error",
//         "@typescript-eslint/no-param-reassign": "error",
//         "@typescript-eslint/no-this-alias": "error",
//         "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
//         "@typescript-eslint/quotes": "off",
//         "@typescript-eslint/semi": [
//             "off",
//             null
//         ],
//         "@typescript-eslint/type-annotation-spacing": "off",
//         "arrow-parens": [
//             "off",
//             "always"
//         ],
//         "brace-style": [
//             "off",
//             "off"
//         ],
//         "comma-dangle": "off",
//         "curly": [
//             "error",
//             "multi-line"
//         ],
//         "eol-last": "off",
//         "eqeqeq": [
//             "error",
//             "smart"
//         ],
//         "id-blacklist": [
//             "error",
//             "any",
//             "Number",
//             "number",
//             "String",
//             "string",
//             "Boolean",
//             "boolean",
//             "Undefined",
//             "undefined"
//         ],
//         "id-match": "error",
//         "import/order": "error",
//         "linebreak-style": "off",
//         "max-len": "off",
//         "new-parens": "off",
//         "newline-per-chained-call": "off",
//         "no-duplicate-imports": "error",
//         "no-eval": "error",
//         "no-extra-semi": "off",
//         "no-irregular-whitespace": "off",
//         "no-multiple-empty-lines": "off",
//         "no-new-wrappers": "error",
//         "no-trailing-spaces": "off",
//         "no-underscore-dangle": "error",
//         "no-var": "error",
//         "object-shorthand": "error",
//         "one-var": [
//             "error",
//             "never"
//         ],
//         "prefer-const": "error",
//         "prefer-template": "error",
//         "quote-props": "off",
//         "radix": "error",
//         "react-hooks/rules-of-hooks": "error",
//         "react/jsx-boolean-value": "error",
//         "react/jsx-curly-spacing": "off",
//         "react/jsx-equals-spacing": "off",
//         "react/jsx-key": "error",
//         "react/jsx-no-bind": "error",
//         "react/jsx-wrap-multilines": "off",
//         "space-before-function-paren": "off",
//         "space-in-parens": [
//             "off",
//             "never"
//         ],
//         "spaced-comment": [
//             "error",
//             "always",
//             {
//                 "markers": [
//                     "/"
//                 ]
//             }
//         ],
//         "@typescript-eslint/tslint/config": [
//             "error",
//             {
//                 "rules": {
//                     "function-name": [
//                         true,
//                         {
//                             "function-regex": {},
//                             "method-regex": {},
//                             "private-method-regex": {},
//                             "protected-method-regex": {},
//                             "static-method-regex": {}
//                         }
//                     ],
//                     "import-name": true,
//                     "jsx-no-lambda": true,
//                     "jsx-no-string-ref": true,
//                     "jsx-self-close": true,
//                     "no-else-after-return": true,
//                     "no-function-constructor-with-string-args": true,
//                     "no-increment-decrement": true,
//                     "object-shorthand-properties-first": true,
//                     "prefer-array-literal": true,
//                     "prettier": true,
//                     "ter-prefer-arrow-callback": true
//                 }
//             }
//         ]
//     }
// };
